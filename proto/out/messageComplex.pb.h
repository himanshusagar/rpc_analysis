// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messageComplex.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_messageComplex_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_messageComplex_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_messageComplex_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_messageComplex_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_messageComplex_2eproto;
class MessageComplex;
struct MessageComplexDefaultTypeInternal;
extern MessageComplexDefaultTypeInternal _MessageComplex_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::MessageComplex* Arena::CreateMaybeMessage<::MessageComplex>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class MessageComplex final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MessageComplex) */ {
 public:
  inline MessageComplex() : MessageComplex(nullptr) {}
  ~MessageComplex() override;
  explicit constexpr MessageComplex(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageComplex(const MessageComplex& from);
  MessageComplex(MessageComplex&& from) noexcept
    : MessageComplex() {
    *this = ::std::move(from);
  }

  inline MessageComplex& operator=(const MessageComplex& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageComplex& operator=(MessageComplex&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageComplex& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageComplex* internal_default_instance() {
    return reinterpret_cast<const MessageComplex*>(
               &_MessageComplex_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MessageComplex& a, MessageComplex& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageComplex* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageComplex* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageComplex* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageComplex>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageComplex& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const MessageComplex& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageComplex* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MessageComplex";
  }
  protected:
  explicit MessageComplex(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueStringFieldNumber = 3,
    kValueDoubleFieldNumber = 2,
    kValueIntFieldNumber = 1,
  };
  // required string valueString = 3;
  bool has_valuestring() const;
  private:
  bool _internal_has_valuestring() const;
  public:
  void clear_valuestring();
  const std::string& valuestring() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_valuestring(ArgT0&& arg0, ArgT... args);
  std::string* mutable_valuestring();
  PROTOBUF_NODISCARD std::string* release_valuestring();
  void set_allocated_valuestring(std::string* valuestring);
  private:
  const std::string& _internal_valuestring() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_valuestring(const std::string& value);
  std::string* _internal_mutable_valuestring();
  public:

  // required double valueDouble = 2;
  bool has_valuedouble() const;
  private:
  bool _internal_has_valuedouble() const;
  public:
  void clear_valuedouble();
  double valuedouble() const;
  void set_valuedouble(double value);
  private:
  double _internal_valuedouble() const;
  void _internal_set_valuedouble(double value);
  public:

  // required int32 valueInt = 1;
  bool has_valueint() const;
  private:
  bool _internal_has_valueint() const;
  public:
  void clear_valueint();
  int32_t valueint() const;
  void set_valueint(int32_t value);
  private:
  int32_t _internal_valueint() const;
  void _internal_set_valueint(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:MessageComplex)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr valuestring_;
  double valuedouble_;
  int32_t valueint_;
  friend struct ::TableStruct_messageComplex_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MessageComplex

// required int32 valueInt = 1;
inline bool MessageComplex::_internal_has_valueint() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MessageComplex::has_valueint() const {
  return _internal_has_valueint();
}
inline void MessageComplex::clear_valueint() {
  valueint_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline int32_t MessageComplex::_internal_valueint() const {
  return valueint_;
}
inline int32_t MessageComplex::valueint() const {
  // @@protoc_insertion_point(field_get:MessageComplex.valueInt)
  return _internal_valueint();
}
inline void MessageComplex::_internal_set_valueint(int32_t value) {
  _has_bits_[0] |= 0x00000004u;
  valueint_ = value;
}
inline void MessageComplex::set_valueint(int32_t value) {
  _internal_set_valueint(value);
  // @@protoc_insertion_point(field_set:MessageComplex.valueInt)
}

// required double valueDouble = 2;
inline bool MessageComplex::_internal_has_valuedouble() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MessageComplex::has_valuedouble() const {
  return _internal_has_valuedouble();
}
inline void MessageComplex::clear_valuedouble() {
  valuedouble_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline double MessageComplex::_internal_valuedouble() const {
  return valuedouble_;
}
inline double MessageComplex::valuedouble() const {
  // @@protoc_insertion_point(field_get:MessageComplex.valueDouble)
  return _internal_valuedouble();
}
inline void MessageComplex::_internal_set_valuedouble(double value) {
  _has_bits_[0] |= 0x00000002u;
  valuedouble_ = value;
}
inline void MessageComplex::set_valuedouble(double value) {
  _internal_set_valuedouble(value);
  // @@protoc_insertion_point(field_set:MessageComplex.valueDouble)
}

// required string valueString = 3;
inline bool MessageComplex::_internal_has_valuestring() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MessageComplex::has_valuestring() const {
  return _internal_has_valuestring();
}
inline void MessageComplex::clear_valuestring() {
  valuestring_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MessageComplex::valuestring() const {
  // @@protoc_insertion_point(field_get:MessageComplex.valueString)
  return _internal_valuestring();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void MessageComplex::set_valuestring(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 valuestring_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:MessageComplex.valueString)
}
inline std::string* MessageComplex::mutable_valuestring() {
  std::string* _s = _internal_mutable_valuestring();
  // @@protoc_insertion_point(field_mutable:MessageComplex.valueString)
  return _s;
}
inline const std::string& MessageComplex::_internal_valuestring() const {
  return valuestring_.Get();
}
inline void MessageComplex::_internal_set_valuestring(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  valuestring_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* MessageComplex::_internal_mutable_valuestring() {
  _has_bits_[0] |= 0x00000001u;
  return valuestring_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* MessageComplex::release_valuestring() {
  // @@protoc_insertion_point(field_release:MessageComplex.valueString)
  if (!_internal_has_valuestring()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = valuestring_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (valuestring_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    valuestring_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void MessageComplex::set_allocated_valuestring(std::string* valuestring) {
  if (valuestring != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  valuestring_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), valuestring,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (valuestring_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    valuestring_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:MessageComplex.valueString)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_messageComplex_2eproto
